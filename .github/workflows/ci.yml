name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    #  Sundays at 00:00 UTC
    - cron: '0 0 * * 0'

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Check formatting
        run: just fmt-check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Run clippy
        run: just lint

  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Build
        run: just build
      - name: Run tests
        run: just test

  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: EmbarkStudios/cargo-deny-action@v2

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Generate coverage
        run: |
          cargo +nightly tarpaulin --all-features --workspace --timeout 120 --out xml --tests --engine llvm
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          verbose: true
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
