name: CI
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    #  Sundays at 00:00 UTC
    - cron: '0 0 * * 0'
env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup rust toolchain, cache and just
        uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          bins: just
          components: rustfmt
      - name: Check formatting
        run: just fmt-check
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup rust toolchain, cache and just
        uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          bins: just
          components: clippy
      - name: Run clippy
        run: just lint
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup rust toolchain, cache, install nextest and just
        uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          cache-target: test
          bins: just,cargo-nextest
      - name: Build
        run: just build
      - name: Run tests
        run: just test
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: EmbarkStudios/cargo-deny-action@v2
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup rust toolchain, cache, install nextest, just and cargo-llvm-cov
        uses: moonrepo/setup-rust@v1
        with:
          channel: nightly
          components: llvm-tools
          cache-target: test
          bins: just,cargo-nextest,cargo-llvm-cov
      - name: Generate coverage
        run: |
          cargo llvm-cov --all-features --no-report nextest
          cargo llvm-cov --all-features --no-report --doc
          cargo llvm-cov report --doctests --lcov --output-path lcov.info
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          file: target/nextest/default/junit.xml
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: lcov.info
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
