name: Build NAPI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    paths:
      - 'src/napi.rs'
      - 'package.json'
      - 'index.d.ts'
      - '.github/workflows/napi.yml'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: |
              npm run build
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              npm run build
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: |
              npm run build

    name: Build ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ matrix.settings.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: npm install -g @napi-rs/cli

      - name: Build
        run: ${{ matrix.settings.build }}
        env:
          CARGO_BUILD_TARGET: ${{ matrix.settings.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: '*.node'
          if-no-files-found: ignore

  # Optional: Publish to npm on version tags
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts
        run: napi artifacts

      - name: Publish to npm
        run: |
          npm config set provenance true
          if npm show changelogen@$(node -p "require('./package.json').version") version 2>/dev/null; then
            echo "Version already published, skipping"
          else
            npm publish
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
