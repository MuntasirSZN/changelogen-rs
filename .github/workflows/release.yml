name: Release

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main
  push:
    tags:
      - 'v*'

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            archive: zip
          - target: x86_64-pc-windows-gnu
            os: windows-latest
            archive: zip
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            archive: zip
          - target: x86_64-apple-darwin
            os: macos-13
            archive: tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            archive: tar.gz
          - target: universal-apple-darwin
            os: macos-latest
            archive: tar.gz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            archive: tar.gz
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            archive: tar.gz
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            archive: tar.gz
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            archive: tar.gz
          - target: armv7-unknown-linux-musleabihf
            os: ubuntu-latest
            archive: tar.gz
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup rust toolchain and cache
        uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          targets: ${{ matrix.target }}

      - name: Install zig
        uses: mlugg/setup-zig@v2
        with:
          version: 0.15.1

      - name: Install cross-compilation tools (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build (cross)
        if: runner.os == 'Linux' && matrix.target != 'x86_64-unknown-linux-musl'
        run: cross build --release --target ${{ matrix.target }}

      - name: Build (native Linux musl)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build (universal macOS)
        if: matrix.target == 'universal-apple-darwin'
        run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin
          cargo build --release --target x86_64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
          lipo -create -output target/universal-apple-darwin/release/changelogen \
            target/x86_64-apple-darwin/release/changelogen \
            target/aarch64-apple-darwin/release/changelogen
          mkdir -p target/universal-apple-darwin/release

      - name: Build (other targets)
        if: matrix.target != 'universal-apple-darwin' && matrix.target != 'x86_64-unknown-linux-musl' && runner.os != 'Linux'
        run: cargo build --release --target ${{ matrix.target }}

      - name: Get OUT_DIR for completions and man pages
        id: outdir
        shell: bash
        run: |
          OUT_DIR=$(find target/${{ matrix.target }}/release/build/changelogen-*/out -type d | head -n 1)
          echo "out_dir=$OUT_DIR" >> $GITHUB_OUTPUT

      - name: Create archive (Windows)
        if: matrix.archive == 'zip'
        shell: pwsh
        run: |
          $binary = "target/${{ matrix.target }}/release/changelogen.exe"
          $completions = "${{ steps.outdir.outputs.out_dir }}/completions"
          $man = "${{ steps.outdir.outputs.out_dir }}/man"
          $archive = "changelogen-${{ matrix.target }}.zip"

          New-Item -ItemType Directory -Path "changelogen" -Force
          Copy-Item $binary "changelogen/changelogen.exe"
          Copy-Item $completions "changelogen/" -Recurse -Container
          Copy-Item $man "changelogen/" -Recurse -Container

          Compress-Archive -Path "changelogen" -DestinationPath $archive

      - name: Create archive (Unix)
        if: matrix.archive == 'tar.gz' && matrix.target != 'universal-apple-darwin'
        shell: bash
        run: |
          binary="target/${{ matrix.target }}/release/changelogen"
          completions="${{ steps.outdir.outputs.out_dir }}/completions"
          man="${{ steps.outdir.outputs.out_dir }}/man"
          archive="changelogen-${{ matrix.target }}.tar.gz"

          tar czf "$archive" "$binary" "$completions" "$man"

      - name: Create archive (universal macOS)
        if: matrix.target == 'universal-apple-darwin'
        shell: bash
        run: |
          binary="target/universal-apple-darwin/release/changelogen"
          # Use x86_64 completions/man (they're identical)
          completions="$(find target/x86_64-apple-darwin/release/build/changelogen-*/out/completions -type d | head -n 1)"
          man="$(find target/x86_64-apple-darwin/release/build/changelogen-*/out/man -type d | head -n 1)"
          archive="changelogen-${{ matrix.target }}.tar.gz"

          tar czf "$archive" "$binary" "$completions" "$man"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelogen-${{ matrix.target }}
          path: changelogen-${{ matrix.target }}.${{ matrix.archive }}

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup rust toolchain and cache
        uses: moonrepo/setup-rust@v1
        with:
          channel: stable

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/changelogen-*/*
          generate_release_notes: true
